{
    "openapi": "3.0.1",
    "info": {
        "title": "OpenAPI definition",
        "version": "v0"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "Game",
            "description": "Endpoints to access game data"
        },
        {
            "name": "Actuator",
            "description": "Monitor and interact",
            "externalDocs": {
                "description": "Spring Boot Actuator Web API Documentation",
                "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
            }
        }
    ],
    "paths": {
        "/api/game/play": {
            "post": {
                "tags": [
                    "Game"
                ],
                "summary": "Play a round of the game",
                "operationId": "play",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GameInputDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "An internal error has occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GameResultDto"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "The game result of the successfully played game",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GameResultDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/game": {
            "get": {
                "tags": [
                    "Game"
                ],
                "summary": "Retrieve game results based on the provided page and size",
                "operationId": "getResults",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Pageable"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "An internal error has occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageGameResultDto"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "All game results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageGameResultDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/actuator": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator root web endpoint",
                "operationId": "links",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    }
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "$ref": "#/components/schemas/Link"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/actuator/health": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'health'",
                "operationId": "health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/actuator/health/**": {
            "get": {
                "tags": [
                    "Actuator"
                ],
                "summary": "Actuator web endpoint 'health-path'",
                "operationId": "health-path",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.spring-boot.actuator.v3+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/vnd.spring-boot.actuator.v2+json": {
                                "schema": {
                                    "type": "object"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GameInputDto": {
                "required": [
                    "name",
                    "option"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the player"
                    },
                    "option": {
                        "$ref": "#/components/schemas/GameOption"
                    }
                },
                "description": "Representation of the input given by a player"
            },
            "GameOption": {
                "type": "string",
                "description": "The option the player has chosen",
                "enum": [
                    "ROCK",
                    "PAPER",
                    "SCISSORS"
                ]
            },
            "GameOutcome": {
                "type": "string",
                "description": "The outcome of the game",
                "enum": [
                    "PLAYER_WIN",
                    "DRAW",
                    "CPU_WIN"
                ]
            },
            "GameResultDto": {
                "type": "object",
                "properties": {
                    "playerName": {
                        "type": "string",
                        "description": "The player name"
                    },
                    "playerSelection": {
                        "$ref": "#/components/schemas/GameOption"
                    },
                    "cpuSelection": {
                        "$ref": "#/components/schemas/GameOption"
                    },
                    "outcome": {
                        "$ref": "#/components/schemas/GameOutcome"
                    },
                    "time": {
                        "type": "string",
                        "description": "The time when the game was played",
                        "format": "date-time"
                    }
                },
                "description": "Representation of a game"
            },
            "Pageable": {
                "type": "object",
                "properties": {
                    "page": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PageGameResultDto": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GameResultDto"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sort": {
                        "$ref": "#/components/schemas/SortObject"
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unpaged": {
                        "type": "boolean"
                    },
                    "paged": {
                        "type": "boolean"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    },
                    "sorted": {
                        "type": "boolean"
                    },
                    "unsorted": {
                        "type": "boolean"
                    }
                }
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "templated": {
                        "type": "boolean"
                    }
                }
            }
        }
    }
}
